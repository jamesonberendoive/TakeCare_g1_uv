<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class rest extends CI_Controller {

    /**
     * Class Constructor
     * @access public
     * @return void
     */
    public function __construct() {
        parent::__construct();
        
    }

    /**
     * @link /rest/get_doctor/$ID
     * @access public
     * @return void
     */
    public function get_doctor($id = null) {
       
    	$SQL = "SELECT * FROM `dbo_t_doctor` where `ID_doctor`= " . $id; 
        $result = array(
            'success' => false,
            'data' => null
        );
        
        if(!$id || !is_numeric($id)) {
            //$this->json_output($result);
			$SQL = "SELECT * FROM `dbo_t_doctor`";
            //return;
        }
        
        // Query, this is only example and doesn't work
        //$SQL = "SELECT * FROM my_table_here WHERE id = " . $id;
        //$SQL = "SELECT * FROM `db_t_doctor` where `ID_doctor`= " . $id;
			
        $query = $this->db->query($SQL);
		
        
        if($query->num_rows() == 0) {
        	$this->json_output($result);
        	return;
        }
        else if (is_array($query))
        {
        	$result = array();
        	foreach ($query as $row)
        		$result['data'] = $row['name'];
        }
        else
        	$result['data'] = $query->result();
        
        // if not record found
        /*if($query->num_rows() == 0) { 
            $this->json_output($result);//wr
			
            return;
        }
        // FIXME completar validacion para array
        else if (condition) {
        	;
        }
        // fetch row
        $result['data'] = $query->row();
        */
        // record found
		foreach ($result as $resultrow){
        $this->json_output($resultrow);
		}
    }
    
    //************************************************************************************
    
    //******************************************************************************************
    
    
     public function get_seguroHospital($id = null) {
    	 
    	$SQL = 'SELECT     dbo_T_seguros.ID_seguro, dbo_T_hospital.ID_hospital, dbo_T_hospital.Nombre AS Hospital ,  dbo_T_hospital.Geolocalizacion_x, dbo_T_hospital.Geolocalizacion_y
    			FROM       dbo_T_seguros
    			INNER JOIN dbo_T_seguro_acepta ON dbo_T_seguros.ID_seguro = dbo_T_seguro_acepta.ID_seguro 
    			INNER JOIN dbo_T_hospital ON dbo_T_seguro_acepta.ID_hospital = dbo_T_hospital.ID_hospital
    			WHERE     (dbo_T_seguros.ID_seguro ='.$id.')
    			ORDER BY dbo_T_seguros.Nombre' ;
    	
    	$result = array(
    	'success' => false,
    	'data' => null
    			);
    
    	if(!$id || !is_numeric($id)) {
    	$this->json_output($result);
    	echo 'Id invalido';
    	return;
    }
    
    // Query, this is only example and doesn't work
    //$SQL = "SELECT * FROM my_table_here WHERE id = " . $id;
    	//$SQL = "SELECT * FROM `db_t_doctor` where `ID_doctor`= " . $id;
    		
    	$query = $this->db->query($SQL);
    
    
    	if($query->num_rows() == 0) {
    	$this->json_output($result);
    	echo 'Query vacio';
    	return;
    }
    	else if (is_array($query))
    	{
    	$result = array();
    	foreach ($query as $row)
    		$result['data'] = $row['name'];
    	}
    	else
    		$result['data'] = $query->result();
    
    	
    	// record found
    	foreach ($result as $resultrow){
    	$this->json_output($resultrow);
    	}
    	}
    
    	//******************************************************************************************
    
    
   //*************************************************************************************

    
    public function get_hospitalInfo($id = null) {
    	 
    	$SQL = "SELECT * FROM `dbo_t_doctor` where `ID_doctor`= " . $id;
    	$result = array(
    			'success' => false,
    			'data' => null
    	);
    
    	if(!$id || !is_numeric($id)) {
    		//$this->json_output($result);
    		$SQL = "SELECT * FROM `dbo_t_doctor`";
    		//return;
    	}
    
    	// Query, this is only example and doesn't work
    	//$SQL = "SELECT * FROM my_table_here WHERE id = " . $id;
    	//$SQL = "SELECT * FROM `db_t_doctor` where `ID_doctor`= " . $id;
    		
    	$query = $this->db->query($SQL);
    
    
    	if($query->num_rows() == 0) {
    		$this->json_output($result);
    		return;
    	}
    	else if (is_array($query))
    	{
    		$result = array();
    		foreach ($query as $row)
    			$result['data'] = $row['name'];
    	}
    	else
    		$result['data'] = $query->result();
    
    	// if not record found
    	/*if($query->num_rows() == 0) {
    	 $this->json_output($result);//wr
    		
    	return;
    	}
    	// FIXME completar validacion para array
    	else if (condition) {
    	;
    	}
    	// fetch row
    	$result['data'] = $query->row();
    	*/
    	// record found
    	foreach ($result as $resultrow){
    	$this->json_output($resultrow);
    }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    //*************************************************************************************
    /**
     * Set JSON headers and echo results
     * @param type $result
     */
    private function json_output($result) {
        //set_json_headers();
        $this->output->set_output(json_encode($result));        
    }
//Lista un(o los) Hospital(es) y los seguros que accepta(n) 
    public function get_hospseguros($id = null) {
    	 
    	$SQL = "SELECT     dbo_T_hospital.ID_hospital, dbo_T_hospital.Nombre, dbo_T_seguros.ID_seguro, dbo_T_seguros.Nombre
				FROM       dbo_T_hospital 
    			INNER JOIN dbo_T_seguro_acepta ON dbo_T_hospital.ID_hospital = dbo_T_seguro_acepta.ID_hospital 
    			INNER JOIN dbo_T_seguros ON dbo_T_seguro_acepta.ID_seguro = dbo_T_seguros.ID_seguro WHERE dbo_T_hospital.ID_hospital = " . $id;
    	$result = array(
    			'success' => false,
    			'data' => null
    	);
    	
    	/* Si no se especifica nigun valor se delvolvera todos los hospitales registrados con 
    	 * con los respectivos seguro que acceptan
    	 * @param: id del hospital
    	 * */
    	
    	if(!$id || !is_numeric($id)) {
    		//$this->json_output($result);
    		$SQL= "SELECT     dbo_T_hospital.ID_hospital, dbo_T_hospital.Nombre, dbo_T_seguros.ID_seguro, dbo_T_seguros.Nombre
				FROM       dbo_T_hospital
    			INNER JOIN dbo_T_seguro_acepta ON dbo_T_hospital.ID_hospital = dbo_T_seguro_acepta.ID_hospital
    			INNER JOIN dbo_T_seguros ON dbo_T_seguro_acepta.ID_seguro = dbo_T_seguros.ID_seguro ";
    		return;
    	}
    
   		
    	$query = $this->db->query($SQL);
    
    
    	if($query->num_rows() == 0) {
    		 
    		$this->json_output($result);
    		return;
    	}
    	else if (is_array($query))
    	{
    		$result = array();
    		foreach ($query as $row)
    			$result['data'] = $row['name'];
    	}
    	else
    		$result['data'] = $query->result();
    
    	
    	// record found
    	foreach ($result as $resultrow){
    	$this->json_output($resultrow);
    }
    }
//*************************************************************************************************************************

    
    //Lista los hospitales en los que se acceptan un seguro especifico
    
    public function get_seguroHospitales($id = null) {
    
    	$SQL = "SELECT     dbo_T_seguros.Nombre, dbo_T_hospital.ID_hospital, dbo_T_hospital.Nombre AS Hospital
    		    FROM       dbo_T_seguros INNER JOIN
    					   dbo_T_seguro_acepta ON dbo_T_seguros.ID_seguro = dbo_T_seguro_acepta.ID_seguro INNER JOIN
    					   dbo_T_hospital ON dbo_T_seguro_acepta.ID_hospital = dbo_T_hospital.ID_hospital
    			WHERE     dbo_T_seguros.ID_seguro ='.$id.'";
    	$result = array(
    			'success' => false,
    			'data' => null
    	);
    	 
    	/*
    	 * Debera especificarse el id del seguro en cuestion
    	* @param: id del hospital
    	* */
    	 
    	if(!$id || !is_numeric($id)) {
    	//$this->json_output($result);
    		
    		return;
    	}
    
    				 
    		$query = $this->db->query($SQL);
    
    
    		if($query->num_rows() == 0) {
    		
    		$this->json_output($result);
    		return;
    		}
    		else if (is_array($query))
    		{
    		$result = array();
    		foreach ($query as $row)
    			$result['data'] = $row['name'];
    		}
    		else
    			$result['data'] = $query->result();
    
   
    			// record found
    		foreach ($result as $resultrow){
    				$this->json_output($resultrow);
    }
    }
    
    
    
    
    
  /*
   * 
   * 
   * */  
   //Lista todos los doctores de un hospital 
    public function get_doctoresHospital($id = null) {
    
    	
    	$result = array(
    			'success' => false,
    			'data' => null
    	);
    	
    	if(!$id || !is_numeric($id)) {
    		$this->json_output($result);
    		return;
    	}
    	//Corregir query
    	$SQL= 'SELECT dbo_T_doctor.ID_doctor, dbo_T_doctor.Nombre, dbo_T_doctor.Apellido, dbo_T_especialidad.ID_especialidad, dbo_T_especialidad.Nombre, dbo_T_hospital.ID_hospital, dbo_T_hospital.Nombre AS  Hospital
    	FROM dbo_T_doctor
    	INNER JOIN dbo_T_doctor_especialidad ON dbo_T_doctor.ID_doctor = dbo_T_doctor_especialidad.ID_doctor
    	INNER JOIN dbo_T_especialidad ON dbo_T_doctor_especialidad.ID_especialidad = dbo_T_especialidad.ID_especialidad
    	INNER JOIN dbo_T_doctor_consultorio ON dbo_T_doctor.ID_doctor = dbo_T_doctor_consultorio.ID_doctor
    	INNER JOIN dbo_T_hospital ON dbo_T_doctor_consultorio.ID_hospital = dbo_T_hospital.ID_hospital
    	WHERE     (dbo_T_hospital.ID_hospital = '. $id .')
    	ORDER BY dbo_T_especialidad.Nombre';
    	  	
    	
    	 
    	$query = $this->db->query($SQL);
    
    
    	if($query->num_rows() == 0) {
    		$this->json_output($result);
    		return;
    	}
    	else if (is_array($query))
    	{
    		$result = array();
    		foreach ($query as $row)
    			$result['data'] = $row['name'];
    	}
    	else
    		$result['data'] = $query->result();
    
    	 
    	// record found
    	foreach ($result as $resultrow){
    		$this->json_output($resultrow);
    	}
    }

    //Devuelve horario de un doctor en base a su consultorio
    public function get_doctorHorario($id = null) {
    
    	 
    	$result = array(
    			'success' => false,
    			'data' => null
    	);
    
    	$SQL= 'SELECT     dbo_T_doctor.ID_doctor, dbo_T_doctor.Nombre, dbo_T_doctor.Apellido, dbo_T_especialidad.Nombre, dbo_T_consultorio.Numero, dbo_T_horario_disponible.horario, dbo_T_hospital.ID_hospital,
    			dbo_T_hospital.Nombre AS Hospital, dbo_T_horario_disponible.horario AS Expr1, dbo_T_consultorio.Piso, dbo_T_hospital.Direccion
    			FROM         dbo_T_doctor INNER JOIN
    			dbo_T_doctor_especialidad ON dbo_T_doctor.ID_doctor = dbo_T_doctor_especialidad.ID_doctor INNER JOIN
    			dbo_T_especialidad ON dbo_T_doctor_especialidad.ID_especialidad = dbo_T_especialidad.ID_especialidad INNER JOIN
    			dbo_T_doctor_consultorio ON dbo_T_doctor.ID_doctor = dbo_T_doctor_consultorio.ID_doctor INNER JOIN
    			dbo_T_consultorio ON dbo_T_doctor_consultorio.ID_consultorio = dbo_T_consultorio.ID_consultorio INNER JOIN
    			dbo_T_hospital ON dbo_T_doctor_consultorio.ID_hospital = dbo_T_hospital.ID_hospital INNER JOIN
    			dbo_T_horario_disponible ON dbo_T_doctor_consultorio.ID_horario = dbo_T_horario_disponible.ID_horario
    			WHERE     (dbo_T_doctor.ID_doctor = '.$id.')';
    
    
    
    	$query = $this->db->query($SQL);
    
    
    	if($query->num_rows() == 0) {
    		$this->json_output($result);
    		return;
    	}
    	else if (is_array($query))
    	{
    		$result = array();
    		foreach ($query as $row)
    			$result['data'] = $row['name'];
    	}
    	else
    		$result['data'] = $query->result();
    
    
    	// record found
    	foreach ($result as $resultrow){
    		$this->json_output($resultrow);
    	}
    }
    
   
}